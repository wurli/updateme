[{"path":"https://wurli.github.io/updateme/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 updateme authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://wurli.github.io/updateme/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Jacob Scott. Author, maintainer.","code":""},{"path":"https://wurli.github.io/updateme/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Scott J (2024). updateme: Informative Messages Outdated Packages. R package version 0.1.0, https://wurli.github.io/updateme/, https://github.com/wurli/updateme.","code":"@Manual{,   title = {updateme: Informative Messages About Outdated Packages},   author = {Jacob Scott},   year = {2024},   note = {R package version 0.1.0, https://wurli.github.io/updateme/},   url = {https://github.com/wurli/updateme}, }"},{"path":[]},{"path":"https://wurli.github.io/updateme/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Informative Messages About Outdated Packages","text":"can install {updateme} CRAN like :","code":"install.packages(\"updateme\")"},{"path":"https://wurli.github.io/updateme/index.html","id":"whats-in-the-box","dir":"","previous_headings":"","what":"What’s in the box?","title":"Informative Messages About Outdated Packages","text":"{updateme} modifies library() tell packages date load :  {updateme} works packages installed CRAN (CRAN-like repos), Bioconductor, GitHub GitLab. Packages installed Bioconductor intelligently checked version Bioconductor ’re using, get special message ’re recent probably :  tidyverse special case, gets modified startup message:  {updateme} configurable using updateme_sources_set(). , example, ’re using development version {lubridate} ’d like see version currently CRAN, can get behaviour like :  default, {updateme} check new versions given package wherever version seems installed .","code":""},{"path":"https://wurli.github.io/updateme/index.html","id":"use-updateme-by-default","dir":"","previous_headings":"","what":"Use {updateme} by default","title":"Informative Messages About Outdated Packages","text":"find ’d like {updateme} available time, consider loading startup adding snippet .Rprofile: necessary, can turn {updateme} using updateme_off(), back updateme_on().","code":"if (interactive()) {   suppressMessages(require(updateme)) }"},{"path":"https://wurli.github.io/updateme/index.html","id":"caching","dir":"","previous_headings":"Use {updateme} by default","what":"Caching","title":"Informative Messages About Outdated Packages","text":"caching downloads used make calls library() pretty quick. cache resets every hour, can configure using options():","code":"# Set the cache expiry time to 30 minutes options(updateme.cache_expiry = 30)"},{"path":"https://wurli.github.io/updateme/reference/updateme-package.html","id":null,"dir":"Reference","previous_headings":"","what":"updateme: Informative Messages About Outdated Packages — updateme-package","title":"updateme: Informative Messages About Outdated Packages — updateme-package","text":"package loaded, source repository checked new versions message shown console indicating whether package date.","code":""},{"path":[]},{"path":"https://wurli.github.io/updateme/reference/updateme-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"updateme: Informative Messages About Outdated Packages — updateme-package","text":"Maintainer: Jacob Scott jscott2718@gmail.com","code":""},{"path":"https://wurli.github.io/updateme/reference/updateme_on.html","id":null,"dir":"Reference","previous_headings":"","what":"Temporarily turn updateme off for all packages — updateme_on","title":"Temporarily turn updateme off for all packages — updateme_on","text":"functions may useful find slight delay caused updateme looking new package versions slowing workflow.","code":""},{"path":"https://wurli.github.io/updateme/reference/updateme_on.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Temporarily turn updateme off for all packages — updateme_on","text":"","code":"updateme_on()  updateme_off()"},{"path":"https://wurli.github.io/updateme/reference/updateme_on.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Temporarily turn updateme off for all packages — updateme_on","text":"old updateme.option, returned options()","code":""},{"path":[]},{"path":"https://wurli.github.io/updateme/reference/updateme_sources_set.html","id":null,"dir":"Reference","previous_headings":"","what":"Configure updateme lookup of new package versions — updateme_sources_set","title":"Configure updateme lookup of new package versions — updateme_sources_set","text":"function helper setting \"updateme.sources\" global option. provides user-friendly interface validation options set.","code":""},{"path":"https://wurli.github.io/updateme/reference/updateme_sources_set.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Configure updateme lookup of new package versions — updateme_sources_set","text":"","code":"updateme_sources_set(...)"},{"path":"https://wurli.github.io/updateme/reference/updateme_sources_set.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Configure updateme lookup of new package versions — updateme_sources_set","text":"... Named unnamed arguments. Values either: One names(getOption(\"repo\")): latest versions taken source, available \"bioc\": new versions looked Bioconductor \"github\"/\"gitlab\": new versions looked GitHub/GitLab, repo can identified using package DESCRIPTION URL pointing GitHub/GitLab repo, e.g. \"https://github.com/wurli/updateme\": latest version particular package taken project NA: updateme attempt query new versions. Note NA inputs must always named (.e. must specify 'per package') NULL: return default behaviour arguments named, names indicate package option apply . unnamed, option apply packages. See examples information.","code":""},{"path":"https://wurli.github.io/updateme/reference/updateme_sources_set.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Configure updateme lookup of new package versions — updateme_sources_set","text":"result setting options(updateme.sources = <new_options>)","code":""},{"path":"https://wurli.github.io/updateme/reference/updateme_sources_set.html","id":"private-repositories","dir":"Reference","previous_headings":"","what":"Private Repositories","title":"Configure updateme lookup of new package versions — updateme_sources_set","text":"updateme supports packages installed private repositories GitHub GitLab. get upstream package version either, configure personal access token (PAT): GitHub packages, updateme checks, order: GITHUB_PAT environmental variable GITHUB_TOKEN environmental variable personal access tokens configured using gitcreds::gitcreds_set() GitLab packages, updateme checks, order: GITLAB_PAT environmental variable GITLAB_TOKEN environmental variable personal access tokens configured using gitcreds::gitcreds_set()","code":""},{"path":[]},{"path":"https://wurli.github.io/updateme/reference/updateme_sources_set.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Configure updateme lookup of new package versions — updateme_sources_set","text":"","code":"# If you want to check non-standard repos for new versions of packages, # you'll first have to set the repos global option. Note that each # option must be named for compatibility with updateme old_repos <- options(repos = c(    # Your default CRAN mirror will likely be something like this   CRAN = \"https://cloud.r-project.org\",    # The r-lib r-universe, including dev versions of infrastructure packages   # like cli, rlang, etc   `r-lib` = \"https://r-lib.r-universe.dev\" ))  # 1. New versions will first be looked up from the r-lib R universe by default # 2. If not found, they will be looked up from the usual CRAN mirror # 3. dplyr will always be first looked up from GitHub # 4. ggplot2 won't be looked up or notified about old_updateme_sources <- updateme_sources_set(   \"r-lib\",   \"CRAN\",   dplyr = \"https://github.com/tidyverse/dplyr\", # Name is optional here   ggplot2 = NA )  # memoise should now be looked up from the r-lib r-universe if (interactive()) {   library(memoise) }  # Restore old options options(old_repos) options(old_updateme_sources)"},{"path":"https://wurli.github.io/updateme/news/index.html","id":"updateme-010","dir":"Changelog","previous_headings":"","what":"updateme 0.1.0","title":"updateme 0.1.0","text":"CRAN release: 2024-03-14 Added NEWS.md file track changes package.","code":""}]
